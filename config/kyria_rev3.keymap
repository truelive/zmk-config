/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

&led_strip {
    chain-length = <31>;// Uncomment if using both per-key and underglow LEDs
};

/ {
    behaviors {
        mt_tap_pref: mt_tap_pref {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_TAP_PREF";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };
        l_paren_brk: l_paren_brk {
            compatible = "zmk,behavior-tap-dance";
            label = "L_PAREN_BRK";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LEFT_BRACKET>,
                <&kp LEFT_BRACE>;
        };
        r_paren_brk: r_paren_brk {
            compatible = "zmk,behavior-tap-dance";
            label = "R_PAREN_BRK";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACKET>,
                <&kp RIGHT_BRACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp EQUAL                        &kp Q                    &kp W                    &kp F                      &kp P    &kp G                                                                  &kp J                       &kp L                     &kp U                    &kp Y                      &kp SEMI    &kp BSLH
  &kp TAB  &mt_tap_pref LEFT_CONTROL A  &mt_tap_pref LEFT_ALT R  &mt_tap_pref LEFT_GUI S  &mt_tap_pref LEFT_SHIFT T    &kp D                                                                  &kp H  &mt_tap_pref RIGHT_SHIFT N  &mt_tap_pref RIGHT_GUI E  &mt_tap_pref LEFT_ALT I  &mt_tap_pref RIGHT_CONTROL O     &kp SQT
  &kp ESC                        &kp Z                    &kp X                    &kp C                      &kp V    &kp B      &sk LSHFT  &rgb_ug RGB_TOG  &rgb_ug RGB_TOG  &kp MINUS      &kp K                       &kp M                 &kp COMMA                  &kp DOT                      &kp FSLH  &caps_word
                                                      &kp GRAVE                                        &l_paren_brk  &kp DEL  &kp BACKSPACE            &sl 1            &sl 2  &kp SPACE  &kp ENTER                &r_paren_brk                                    &sk RIGHT_SHIFT
            >;

            sensor-bindings =
                <&inc_dec_kp RIGHT_ARROW LEFT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;

            label = "0. Base";
        };

        numbers_edit_nav {
            bindings = <
   &trans            &mt_tap_pref F1 KP_N1        &mt_tap_pref F2 KP_N2       &mt_tap_pref F3 KP_N3          &mt_tap_pref F4 KP_N4  &mt_tap_pref F5 KP_N5                                  &mt_tap_pref F6 KP_N6  &mt_tap_pref F7 KP_NUMBER_7        &mt_tap_pref F8 KP_N8        &mt_tap_pref F9 KP_N9                &mt_tap_pref F10 KP_N0  &trans
&kp LG(X)  &mt_tap_pref LEFT_CONTROL LG(C)  &mt_tap_pref LEFT_ALT LG(V)  &mt_tap_pref LEFT_GUI LEFT  &mt_tap_pref LEFT_SHIFT RIGHT          &kp LA(LG(I))                                                 &trans  &mt_tap_pref RIGHT_SHIFT UP  &mt_tap_pref RIGHT_GUI DOWN  &mt_tap_pref LEFT_ALT RG(Z)  &mt_tap_pref RIGHT_CONTROL RS(RG(Z))  &trans
   &trans                           &trans                       &trans                      &trans                         &trans                 &trans  &trans  &trans  &trans  &trans                 &trans                       &trans                       &trans                       &trans                                &trans  &trans
                                                                 &trans                                                     &trans                 &trans  &trans  &trans   &mo 3  &trans                 &trans                       &trans                                                    &trans
            >;

            label = "1. Num";
        };

        symbols {
            bindings = <
&trans  &kp EXCL        &kp AT     &kp POUND            &kp DLLR            &kp PRCNT                                   &kp CARET      &kp AMPS         &kp STAR          &kp LPAR  &kp RPAR  &trans
&trans  &kp BSLH  &kp KP_MINUS  &kp KP_EQUAL    &kp LEFT_BRACKET    &kp RIGHT_BRACKET                                      &trans        &trans           &trans            &trans    &trans  &trans
&trans  &kp PIPE     &kp UNDER      &kp PLUS  &kp LS(LEFT_BRACE)  &kp LS(RIGHT_BRACE)  &trans  &trans  &trans  &trans  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE    &trans  &trans
                        &trans                            &trans               &trans  &trans   &mo 3  &trans  &trans      &trans        &trans                             &trans
            >;

            label = "2. Sym";
        };

        adjust {
            bindings = <
       &bt BT_CLR          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &rgb_ug RGB_EFR       &rgb_ug RGB_BRI       &rgb_ug RGB_BRD  &rgb_ug RGB_SPI   &rgb_ug RGB_SPD  &rgb_ug RGB_EFF
&ext_power EP_TOG  &kp LG(LS(NUMBER_4))       &kp F11  &kp LC(DOWN)    &kp LC(UP)        &trans                                       &kp C_PREV          &kp C_VOL_UP          &kp C_VOL_DN       &kp C_MUTE  &kp C_PLAY_PAUSE       &kp C_NEXT
       &sys_reset                &trans        &trans  &out OUT_BLE  &out OUT_USB        &trans  &trans  &trans  &trans  &trans           &trans  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC      &kp C_SLEEP     &kp C_AL_LOCK       &sys_reset
                                               &trans                      &trans        &trans  &trans  &trans  &trans  &trans           &trans                &trans                                 &trans
            >;

            label = "3. Adj";
        };
    };
};
